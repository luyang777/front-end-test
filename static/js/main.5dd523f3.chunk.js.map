{"version":3,"sources":["Component/Card.js","Component/CardList.js","Component/SearchBox.js","Component/Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","handleChange","event","setState","searchfield","target","value","console","log","state","fetch","then","response","json","users","filterRobots","this","filter","robot","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAgBeA,EAbF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,gCACI,6BAAKC,IACL,4BAAIC,WCSLI,EAdE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAO,cAAC,EAAD,CAAMX,GAAIO,EAAOI,GAAGX,GAAIC,KAAQM,EAAOI,GAAGV,KAAMC,MAAOK,EAAOI,GAAGT,WAK5E,OACI,8BACKM,KCEEI,EAbG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAEhB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAM,SACNC,YAAY,gBACZC,SAAWH,OCANI,EARF,SAACC,GACZ,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCsCAC,E,kDApCX,aAAc,IAAD,8BACT,gBAaJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,QACzCC,QAAQC,IAAIN,EAAMG,OAAOC,QAdzB,EAAKG,MAAQ,CACT1B,OAAQ,GACRqB,YAAY,IAJP,E,qDAQb,WAAqB,IAAD,OAChBM,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAAEpB,OAAQ+B,S,oBAQ9C,WAAS,IAAD,OACEC,EAAeC,KAAKP,MAAM1B,OAAOkC,QAAO,SAAAC,GAC1C,OAAOA,EAAMzC,KAAK0C,cAAcC,SAAS,EAAKX,MAAML,YAAYiB,wBAEpE,OACA,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAe2B,KAAKf,eAC/B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAASgC,a,GA7BjBO,aCMHC,G,YAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5dd523f3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = ({id, name, email}) =>{\r\n    return(\r\n        <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","\r\nimport React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots}) => {\r\n    const cardArray = robots.map((user, i) =>{\r\n        return <Card id={robots[i].id} name = {robots[i].name} email={robots[i].email}/>\r\n    }\r\n    \r\n    )\r\n\r\n    return(\r\n        <div>\r\n            {cardArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n    \r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type ='search'\r\n            placeholder='search robots'\r\n            onChange ={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n      <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n        {props.children}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Scroll;","import React, {Component} from 'react';\r\nimport CardList from './Component/CardList';\r\nimport SearchBox from './Component/SearchBox';\r\nimport Scroll from './Component/Scroll';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield:''\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n          .then(response=> response.json())\r\n          .then(users => {this.setState({ robots: users})});\r\n      }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({searchfield: event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    render(){\r\n        const filterRobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLocaleLowerCase())\r\n        });\r\n        return(\r\n        <div className='tc'>\r\n            <h1 className='f1'>RoboFriends</h1>\r\n            <SearchBox searchChange ={this.handleChange}/> \r\n            <Scroll>\r\n                <CardList robots ={filterRobots} />\r\n            </Scroll>\r\n            \r\n        </div>\r\n\r\n        )}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'tachyons'; \n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}